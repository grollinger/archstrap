#!/bin/bash
# shellcheck disable=SC2016 Expressions don't expand in single quotes, use double quotes for that | mirrors accept vars
set -eEuo pipefail

(( $# ))||{ printf '\e[31mx\e[m: %s\n' 'A mountpoint must be specified to bootstrap Arch Linux (e.g. /tmp)'; exit 1; }
[[ -d $1 ]]||{ printf '\e[31mx\e[m: %s\n' "Mountpoint $1 does not exist"; exit 1; }
(( ${EUID-} ))&&{ printf '\e[31mx\e[m: %s\n' 'Must be executed as superuser'; exit 1; }

mnt="$1" rootFS="$1/root.x86_64"; shift
tarBall='archlinux-bootstrap-x86_64.tar.gz' tarSig="$tarBall.sig"
officialURL="https://archlinux.org" globalMirror="https://geo.mirror.pkgbuild.com"

: "$rootFS"; [[ -d "$_" ]]&&{ "$_/bin/arch-chroot" "$_"; exit; }

get_tarball(){ for _; do curl "$_" >"$mnt"/"${_##*/}"; done; }
verify_unpack(){
  if gpg --verify "$2" "$1"; then printf '\e[32m>\e[m: %s\n' 'Signature verified'
  else printf '\e[31mx\e[m: %s\n' 'Bad signature. GPG key must be received'; fi
  tar -xzf "$1" -C "${1%/*}" --numeric-owner; rm "${1:?}" "${2}"
}

printf '\e[33m!\e[m: %s\n' 'Downloading bootstrap tarball & signature..'
: 'iso/latest'; get_tarball "$globalMirror/$_/$tarBall" "$officialURL/$_/$tarSig"
printf '\e[33m!\e[m: %s\n' 'Target downloaded. Verifying tarball GPG signature..'
verify_unpack "$mnt/$tarBall" "$mnt/$tarSig"
printf '\e[32m>\e[m: %s\n' "Bootstrapped tarball unpacked to $rootFS"

: '/usr/share/terminfo'; [[ -d $_ ]]&& cp -r "$_" "$rootFS/usr/share/"
cp chroot.sh "$rootFS/"; cp bash.bashrc "$rootFS/etc/"
printf 'Server = %s/$repo/os/$arch\n' "$globalMirror" >>"$rootFS/etc/pacman.d/mirrorlist"
printf '\e[32m>\e[m: %s\n' 'Created necessary chroot system files'

"$rootFS/bin/arch-chroot" "$rootFS" ./chroot.sh "$mnt" "$@"