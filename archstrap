#!/bin/bash
# shellcheck disable=SC2016 Expressions don't expand in single quotes, use double quotes for that | mirrors accept vars

set -eEuo pipefail

(( ${EUID-} ))&&{ printf '\e[31mx\e[m: %s\n' 'Must be executed as superuser'; exit 1; }
(( $# ))||{ printf '\e[31mx\e[m: %s\n' 'A mountpoint must be specified to bootstrap Arch Linux (e.g. /tmp)'; exit 1; }
[[ -d $1 ]]||{ printf '\e[31mx\e[m: %s\n' "Mountpoint $1 does not exist"; exit 1; }

mnt="${1%/}"
rootFS="$mnt/${2:-archrootfs}"
packages=('dosfstools' 'ntfs-3g' 'parted' 'gdisk')
tarBall='archlinux-bootstrap-x86_64.tar.zst' tarSig="$tarBall.sig"
officialURL="https://archlinux.org"
globalMirror="https://geo.mirror.pkgbuild.com"

get_tarball(){
  [[ -f /tmp/$tarSig ]]&& rm "/tmp/${tarSig:?}"
  curl "$2" >"/tmp/${2##*/}"

  [[ -f /tmp/$tarBall ]]&& return
  curl "$1" >"/tmp/${1##*/}"
}

verify_unpack(){
  if gpg --verify "/tmp/$1.sig" "/tmp/$1"; then
    printf '\e[32m>\e[m: %s\n' 'Signature verified'
  else
    printf '\e[31mx\e[m: %s\n' 'Bad signature. GPG key must be received'
    exit 1
  fi

  tar -xf "/tmp/$1" -C "$mnt" --numeric-owner
  mv "$mnt/root.x86_64" "$rootFS"
}

arch_chroot(){
  : "$rootFS"
  mountpoint "$_" >/dev/null|| mount --bind "$_" "$_"
  "$_/bin/arch-chroot" "$_" "$@"
}

[[ -d $rootFS ]]&&{ arch_chroot; exit; }

printf '\e[33m!\e[m: %s\n' 'Downloading bootstrap tarball & signature..'
: "iso/latest"
get_tarball "$globalMirror/$_/$tarBall" "$officialURL/$_/$tarSig"

printf '\e[33m!\e[m: %s\n' 'Target downloaded. Verifying tarball GPG signature..'
verify_unpack "$tarBall"
printf '\e[32m>\e[m: %s\n' "Bootstrapped tarball unpacked to $rootFS"

[[ $@ =~ '--buildfs' ]]&& exit

: '/usr/share/terminfo'; [[ -d $_ ]]&& cp -r "$_" "$rootFS/usr/share/"
cp chroot.sh "$rootFS/"; cp bash.bashrc "$rootFS/etc/"

printf 'Server = %s/$repo/os/$arch\n' "$globalMirror" >>"$rootFS/etc/pacman.d/mirrorlist"
printf '\e[32m>\e[m: %s\n' 'Created necessary chroot system files'

arch_chroot /bin/bash chroot.sh "$rootFS" "${packages[@]}"
